<?xml version="1.0" encoding="utf-8"?>
<Symbols LinesOfCode="33" PostSharpLinesOfCode="0" xmlns="http://schemas.postsharp.org/2.0/symbols">
  <Class Class="#1=T:[Valid.Fulfillment.PostSharp]Valid.Fulfillment.PostSharp.LogException">
    <Instance Declaration="#2=A:Valid.Fulfillment.Data" Id="60e9f45ab6719dc">
      <Target Target="#3=M:[Valid.Fulfillment.Data]Valid.Fulfillment.Data.SqlRepository::GetDistributionCenterList()">
        <JoinPoint Advising="#1" Description="#4=Wrapped by advice(s) OnException" Ordinal="0" />
      </Target>
      <Target Target="#5=M:[Valid.Fulfillment.Data]Valid.Fulfillment.Data.SqlRepository::GetOrderDetailList(System.Guid)">
        <JoinPoint Advising="#1" Description="#4" Ordinal="2" />
      </Target>
      <Target Target="#6=M:[Valid.Fulfillment.Data]Valid.Fulfillment.Data.SqlRepository::CreateSerialRangeEntry(System.String, System.Guid)">
        <JoinPoint Advising="#1" Description="#4" Ordinal="4" />
      </Target>
      <Target Target="#7=M:[Valid.Fulfillment.Data]Valid.Fulfillment.Data.SqlRepository::GetSerialRangeList(System.Guid)">
        <JoinPoint Advising="#1" Description="#4" Ordinal="6" />
      </Target>
      <Target Target="#8=M:[Valid.Fulfillment.Data]Valid.Fulfillment.Data.SqlRepository::RemoveSerialRange(Valid.Fulfillment.Common.Models.SerialRange)">
        <JoinPoint Advising="#1" Description="#4" Ordinal="8" />
      </Target>
      <Target Target="#9=M:[Valid.Fulfillment.Data]Valid.Fulfillment.Data.SqlRepository::GetOrders(System.DateTime, System.DateTime)">
        <JoinPoint Advising="#1" Description="#4" Ordinal="10" />
      </Target>
      <Target Target="#10=M:[Valid.Fulfillment.Data]Valid.Fulfillment.Data.SqlRepository::GetUserInfoList()">
        <JoinPoint Advising="#1" Description="#4" Ordinal="12" />
      </Target>
      <Target Target="#11=M:[Valid.Fulfillment.Data]Valid.Fulfillment.Data.SqlRepository::#ctor()">
        <JoinPoint Advising="#1" Description="#4" Ordinal="14" />
      </Target>
    </Instance>
  </Class>
  <Class Class="#12=T:[Valid.Fulfillment.PostSharp]Valid.Fulfillment.PostSharp.LogTrace">
    <Instance Declaration="#2" Id="60e9f4545fc6f06">
      <Target Target="#3">
        <JoinPoint Advising="#12" Description="#13=Wrapped by advice(s) OnEntry, OnSuccess, OnException, OnExit" />
      </Target>
      <Target Target="#5">
        <JoinPoint Advising="#12" Description="#13" Ordinal="3" />
      </Target>
      <Target Target="#6">
        <JoinPoint Advising="#12" Description="#13" Ordinal="5" />
      </Target>
      <Target Target="#7">
        <JoinPoint Advising="#12" Description="#13" Ordinal="7" />
      </Target>
      <Target Target="#8">
        <JoinPoint Advising="#12" Description="#13" Ordinal="9" />
      </Target>
      <Target Target="#9">
        <JoinPoint Advising="#12" Description="#13" Ordinal="11" />
      </Target>
      <Target Target="#10">
        <JoinPoint Advising="#12" Description="#13" Ordinal="13" />
      </Target>
      <Target Target="#11">
        <JoinPoint Advising="#12" Description="#13" Ordinal="15" />
      </Target>
    </Instance>
  </Class>
  <Annotation Target="#14=M:[Valid.Fulfillment.PostSharp]Valid.Fulfillment.PostSharp.LogException::OnException(PostSharp.Aspects.MethodExecutionArgs)" Arguments="#15=2" Description="#16=PostSharp estimates that 2 line(s) of code are saved every time this advice is applied. Use the [LinesOfCodeAvoided] attribute on the aspect or specify the LinesOfCodeAvoided property on the advice attribute to override this value." />
  <Annotation Target="#17=M:[Valid.Fulfillment.PostSharp]Valid.Fulfillment.PostSharp.LogTrace::OnEntry(PostSharp.Aspects.MethodExecutionArgs)" Arguments="#15" Description="#16" />
  <Annotation Target="#18=M:[PostSharp]PostSharp.Aspects.OnMethodBoundaryAspect::OnSuccess([PostSharp]PostSharp.Aspects.MethodExecutionArgs)" Arguments="#15" Description="#16" />
  <Annotation Target="#19=M:[Valid.Fulfillment.PostSharp]Valid.Fulfillment.PostSharp.LogTrace::OnExit(PostSharp.Aspects.MethodExecutionArgs)" Arguments="#15" Description="#16" />
  <Annotation Target="#20=M:[PostSharp]PostSharp.Aspects.OnMethodBoundaryAspect::OnException([PostSharp]PostSharp.Aspects.MethodExecutionArgs)" Arguments="#15" Description="#16" />
</Symbols>